# Generated by Django 4.1.3 on 2022-12-14 12:07

import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
                ('poster', models.ImageField(blank=True, default=None, null=True, upload_to='bands/posters/', verbose_name='poster')),
                ('quantity', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(verbose_name='description')),
                ('is_full', models.BooleanField(default=False, null=True, verbose_name='is_full')),
                ('is_visible', models.BooleanField(default=True, null=True, verbose_name='is_visible')),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Band',
                'verbose_name_plural': 'Bands',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': "Bookmarked user's post",
                'verbose_name_plural': 'Bookmarked users posts',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
            ],
            options={
                'verbose_name': 'Instrument',
                'verbose_name_plural': 'Instruments',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='InstrumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Instrument Category',
                'verbose_name_plural': 'Instrument Categories',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='is_accepted')),
            ],
            options={
                'verbose_name': 'Invite',
                'verbose_name_plural': 'Invites',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='posts/images/', verbose_name='image')),
                ('audio', models.FileField(blank=True, default=None, null=True, upload_to='posts/audios/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['wav', 'mp3'])], verbose_name='audio')),
                ('text', models.TextField(blank=True, null=True, verbose_name='text')),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='is_accepted')),
            ],
            options={
                'verbose_name': 'Request',
                'verbose_name_plural': 'Requests',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1000)),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='posts/images/', verbose_name='image')),
                ('audio', models.FileField(blank=True, default=None, null=True, upload_to='posts/audios/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['wav', 'mp3'])], verbose_name='audio')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=[('#FFFFFF', 'white'), ('#000000', 'black')])),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='UserBandInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='band_user', to='info.band', verbose_name='band')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrument_user', to='info.instrument', verbose_name='instrument')),
            ],
            options={
                'verbose_name': 'User, band and instrument',
                'verbose_name_plural': 'Users, bands and instruments',
                'ordering': ('id',),
            },
        ),
    ]
